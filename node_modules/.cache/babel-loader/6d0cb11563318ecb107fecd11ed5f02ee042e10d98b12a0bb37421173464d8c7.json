{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Desktop\\\\youtube_clone\\\\src\\\\components\\\\ChannelDetails.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ChannelCard from './ChannelCard';\nimport Videos from './Videos';\nimport { FetchApi } from '../utils/FetchApi';\nimport { Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChannelDetails = () => {\n  _s();\n  const [ChannelDetail, setChannelDetail] = useState(null);\n  const [videos, setVideos] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    FetchApi(`channels?part=snippet&id=${id}`).then(data => setChannelDetail(data === null || data === void 0 ? void 0 : data.items[0]));\n    FetchApi(`search?channelId=${id}&part=snippet&order=date`).then(data => setVideos(data === null || data === void 0 ? void 0 : data.items));\n  }, [id]);\n  console.log(ChannelDetail, videos);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    minHeight: \"95vh\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'linear-gradient(90deg, rgba(9,19,121,1) 3%, rgba(255,0,0,1) 100%, rgba(36,16,0,1) 100%, rgba(9,19,121,1) 100%)',\n          height: '300px',\n          zIndex: '10'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ChannelCard, {\n        ChannelDetail: ChannelDetail,\n        marginTop: \"-110px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      p: 2,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mr: {\n            sm: '100px'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Videos, {\n        videos: videos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(ChannelDetails, \"ykWhenvNAjHu4dE4nX6fPsjSX04=\", false, function () {\n  return [useParams];\n});\n_c = ChannelDetails;\nexport default ChannelDetails;\nvar _c;\n$RefreshReg$(_c, \"ChannelDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ChannelCard","Videos","FetchApi","Box","Typography","ChannelDetails","ChannelDetail","setChannelDetail","videos","setVideos","id","then","data","items","console","log","background","height","zIndex","mr","sm"],"sources":["C:/Users/GIGABYTE/Desktop/youtube_clone/src/components/ChannelDetails.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState,useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport ChannelCard from './ChannelCard'\r\nimport Videos from './Videos'\r\nimport {FetchApi} from '../utils/FetchApi'\r\n\r\nimport { Box,Typography } from '@mui/material'\r\n\r\nconst ChannelDetails = () => {\r\n\r\n  const [ChannelDetail,setChannelDetail]=useState(null)\r\n  const [videos,setVideos]=useState([])\r\n  \r\n  const {id}=useParams();\r\n\r\n  useEffect(()=>{\r\n    FetchApi(`channels?part=snippet&id=${id}`).then((data)=>setChannelDetail(data?.items[0]))\r\n    FetchApi(`search?channelId=${id}&part=snippet&order=date`).then((data)=>setVideos(data?.items))\r\n  },[id])\r\n\r\n  console.log(ChannelDetail,videos)\r\n  return(\r\n\r\n        <Box minHeight='95vh'>\r\n          <Box>\r\n            <div style={{background: 'linear-gradient(90deg, rgba(9,19,121,1) 3%, rgba(255,0,0,1) 100%, rgba(36,16,0,1) 100%, rgba(9,19,121,1) 100%)'\r\n            ,height:'300px',zIndex:'10' }}\r\n             />\r\n            <ChannelCard ChannelDetail={ChannelDetail} marginTop='-110px' />\r\n          </Box>\r\n\r\n          <Box display='flex' p={2}>\r\n            <Box sx={{mr:{sm:'100px'}}}     />\r\n            <Videos videos={videos} />\r\n          </Box>\r\n          \r\n        </Box>\r\n\r\n        \r\n        \r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ChannelDetails"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAAQC,QAAQ,QAAO,mBAAmB;AAE1C,SAASC,GAAG,EAACC,UAAU,QAAQ,eAAe;AAAA;AAE9C,MAAMC,cAAc,GAAG,MAAM;EAAA;EAE3B,MAAM,CAACC,aAAa,EAACC,gBAAgB,CAAC,GAACV,QAAQ,CAAC,IAAI,CAAC;EACrD,MAAM,CAACW,MAAM,EAACC,SAAS,CAAC,GAACZ,QAAQ,CAAC,EAAE,CAAC;EAErC,MAAM;IAACa;EAAE,CAAC,GAACX,SAAS,EAAE;EAEtBD,SAAS,CAAC,MAAI;IACZI,QAAQ,CAAE,4BAA2BQ,EAAG,EAAC,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAGL,gBAAgB,CAACK,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACzFX,QAAQ,CAAE,oBAAmBQ,EAAG,0BAAyB,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAGH,SAAS,CAACG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,KAAK,CAAC,CAAC;EACjG,CAAC,EAAC,CAACH,EAAE,CAAC,CAAC;EAEPI,OAAO,CAACC,GAAG,CAACT,aAAa,EAACE,MAAM,CAAC;EACjC,oBAEM,QAAC,GAAG;IAAC,SAAS,EAAC,MAAM;IAAA,wBACnB,QAAC,GAAG;MAAA,wBACF;QAAK,KAAK,EAAE;UAACQ,UAAU,EAAE,gHAAgH;UACxIC,MAAM,EAAC,OAAO;UAACC,MAAM,EAAC;QAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC3B,eACH,QAAC,WAAW;QAAC,aAAa,EAAEZ,aAAc;QAAC,SAAS,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5D,eAEN,QAAC,GAAG;MAAC,OAAO,EAAC,MAAM;MAAC,CAAC,EAAE,CAAE;MAAA,wBACvB,QAAC,GAAG;QAAC,EAAE,EAAE;UAACa,EAAE,EAAC;YAACC,EAAE,EAAC;UAAO;QAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO,eAClC,QAAC,MAAM;QAAC,MAAM,EAAEZ;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACtB;EAAA;IAAA;IAAA;IAAA;EAAA,QAEF;AAKd,CAAC;AAAA,GAjCKH,cAAc;EAAA,QAKPN,SAAS;AAAA;AAAA,KALhBM,cAAc;AAqCpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}