{"ast":null,"code":"import React from'react';import{Stack,Box}from'@mui/material';import VideoCard from'./VideoCard';import ChannelCard from'./ChannelCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Videos=function Videos(_ref){var videos=_ref.videos,direction=_ref.direction;return/*#__PURE__*/_jsx(Stack,{direction:direction||'row',flexWrap:\"wrap\",justifyContent:\"start\",gap:2,children:videos.map(function(item,index){return/*#__PURE__*/_jsxs(Box,{children:[item.id.videoId&&/*#__PURE__*/_jsx(VideoCard,{video:item}),item.id.channelId&&/*#__PURE__*/_jsx(ChannelCard,{ChannelDetail:item})]},index);})});};export default Videos;","map":{"version":3,"names":["React","Stack","Box","VideoCard","ChannelCard","Videos","videos","direction","map","item","index","id","videoId","channelId"],"sources":["C:/Users/GIGABYTE/Desktop/youtube_clone/src/components/Videos.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Stack,Box } from '@mui/material'\r\nimport VideoCard from './VideoCard'\r\nimport ChannelCard from './ChannelCard'\r\nconst Videos = ({videos,direction}) => (\r\n  <Stack direction={direction||'row'} flexWrap=\"wrap\" justifyContent=\"start\" gap={2}>\r\n  {videos.map((item,index)=>(\r\n    <Box key={index}>\r\n      {item.id.videoId&&<VideoCard video={item}/>}\r\n      {item.id.channelId&&<ChannelCard ChannelDetail={item}/>}\r\n    </Box>\r\n  ))}\r\n\r\n  </Stack>\r\n   \r\n  )\r\n\r\n\r\nexport default Videos"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,KAAK,CAACC,GAAG,KAAQ,eAAe,CACzC,MAAOC,UAAS,KAAM,aAAa,CACnC,MAAOC,YAAW,KAAM,eAAe,yFACvC,GAAMC,OAAM,CAAG,QAATA,OAAM,UAAKC,OAAM,MAANA,MAAM,CAACC,SAAS,MAATA,SAAS,oBAC/B,KAAC,KAAK,EAAC,SAAS,CAAEA,SAAS,EAAE,KAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAE,CAAE,UACjFD,MAAM,CAACE,GAAG,CAAC,SAACC,IAAI,CAACC,KAAK,qBACrB,MAAC,GAAG,YACDD,IAAI,CAACE,EAAE,CAACC,OAAO,eAAE,KAAC,SAAS,EAAC,KAAK,CAAEH,IAAK,EAAE,CAC1CA,IAAI,CAACE,EAAE,CAACE,SAAS,eAAE,KAAC,WAAW,EAAC,aAAa,CAAEJ,IAAK,EAAE,GAF/CC,KAAK,CAGT,EACP,CAAC,EAEM,EAEP,CAGH,cAAeL,OAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}